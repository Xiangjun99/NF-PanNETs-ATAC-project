
library(Signac)
library(Seurat)
library(SeuratWrappers)
library(monocle3)
library(Matrix)
library(ggplot2)
library(patchwork)
library(magrittr)
library(dplyr)
library(tidyr) 
library(Seurat)
library(EnsDb.Hsapiens.v86)
library(BuenColors)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(stringr)
library(Seurat)
library(clusterProfiler)

immune <- readRDS("/vast/palmer/scratch/liu_yang/dw779/DXJ_ATAC/@@@PNET_Proj_Nov/Immune_cells/immune_celltype2.rds")

#subset endocrine 
myeloid <- subset(immune, idents = "Myeloid Cells")

myeloid

DefaultAssay(myeloid) <- 'peaks'
#Normalization and linear dimensional reduction to remove batch effect
myeloid <- RunTFIDF(myeloid)
myeloid <- FindTopFeatures(myeloid, min.cutoff = 'q0')
myeloid <- RunSVD(myeloid)

DepthCor(myeloid)

alphabet <- c('#EB545C','#87C55F','#245297','#F5C96B','#5084C2','#CB7E83','#FF9900','#87C55F','#EB8E7C','#7D9BE5',
              '#66529F','#DAB2B2','#FC6FCF','#0099FF','#85C17E',
              '#2B6688','#7D9BE5','#D87070','#AABBCC','#C24976','#DEBF80',
              '#5F9069','#A37E7D','#B291B5','#8A7197','#3BA997','#7F7F7F',
              '#73AD96','#95BAA6','#B487B7','#F0CE58','#EF7512','#76A2BB',
              '#F52831','#F1A93B','#DCCD58','#289E92','#EB8E7C','#469393','#F5D78F'
)

#Non-linear dimension reduction and clustering
myeloid <- RunUMAP(object = myeloid, reduction = 'lsi', dims = 2:10)
myeloid <- FindNeighbors(object = myeloid, reduction = 'lsi', dims = 2:10)
myeloid <- FindClusters(object = myeloid, verbose = FALSE, algorithm = 1,resolution = 0.75)

p1 <- DimPlot(object = myeloid, label = TRUE, pt.size = 2) +  
  scale_color_manual(values = alphabet[1:(myeloid@active.ident %>% unique %>% length )])
p1

ggsave("UMAP_myeloid_clusterâ€”10-0.75.pdf", plot = p1, dpi = 600, bg = NULL, height = 8, width = 8)


p2 <- DimPlot(object = myeloid, label = TRUE, group.by = "dataset") 
p2
ggsave("UMAP_myeloid_dataset.pdf", plot = p2, dpi = 600, bg = NULL, height = 8, width = 8)

myeloid@meta.data$grade <- grade_info[myeloid@meta.data$dataset]

alphabet1 <- c('#76A2BB','#F1A93B')
p3 <- DimPlot(object = myeloid, group.by = "grade", pt.size = 2)+  
  scale_color_manual(values = alphabet1[1:(myeloid@active.ident %>% unique %>% length )])
p3
ggsave("UMAP_myeloid_grade.pdf", plot = p3, dpi = 600, bg = NULL, height = 8, width = 8)

p4= p1+p3
p4

DefaultAssay(myeloid) <- 'RNA'

#markergene of macrophage 
marker.genes <- unique(c(
  "CCL2", "CCL18", "CCL22", "CCL24",  #M2a
  "CCL5","TGFB1","CD163","IL10", #TAM
  "IL1B","IL1A","TNF","IL6","CD86","CD80","CXCL9","CXCL10","CXCL11","IL12A","IL12B","CCL13","SPP1"
))


p5 <- DotPlot(myeloid, features=marker.genes, cols="RdYlBu") + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) 
p5
ggsave("Dotplot_myeloid_markergene_microphage_subtype.pdf", plot = p5, dpi = 600, bg = NULL, height = 4, width = 30)


##############GO enrich analysis
##############GO enrich analysis
data_GO <- compareCluster(
  ENTREZID~group, 
  data=data, 
  fun="enrichGO", 
  OrgDb="org.Hs.eg.db",
  ont = "BP",
  pAdjustMethod = "BH",
  pvalueCutoff = 0.05,
  qvalueCutoff = 0.05
)
data_GO_sim <- simplify(data_GO, 
                        cutoff=0.5, 
                        by="p.adjust", 
                        select_fun=min)

p3 <- dotplot(data_GO, showCategory=3,font.size = 8)+
  theme(
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank(),  
    panel.background = element_blank()   
  )
p3
ggsave("GO_myeloid_compare.pdf", plot = p3, width = 10, height = 8) #change name

data_GO_sim_fil <- data_GO_sim@compareClusterResult

#data_GO_sim_fil <- data_GO@compareClusterResult

write.csv(data_GO_sim_fil, file = "GO_pathway_sim_fil-myeloid.csv")




#####################Peak analysis ################################################
#####################Peak analysis ################################################
library(Seurat)
library(EnhancedVolcano)
library(ggplot2)
library(ggrepel)
library(dplyr)

DefaultAssay(myeloid) <- 'peaks'

da_peaks <- FindAllMarkers(myeloid, assay = "peaks", logfc.threshold = 0.25, min.pct = 0.01)  #only.pos = T
da_peaks$closest_gene <- ClosestFeature(myeloid, regions = rownames(da_peaks))$gene_name

#find closest genes near da_peaks
open_da_peaks <- rownames(da_peaks)
open_da_peaks
closest_genes_da_peaks <- ClosestFeature(myeloid, regions=open_da_peaks)
head(closest_genes_da_peaks)



closest_genes_da_peaks1 <- DACRs_marker

#merge da_peaks and closest_gene
da_peaks_name <- merge(closest_genes_da_peaks1, da_peaks, by.x = "query_region", by.y = "gene", all.x = TRUE)

da_peaks_filtered <-da_peaks_name[da_peaks_name$p_val < 0.001, ]
#da_peaks_filtered <- da_peaks_name %>% group_by(cluster) %>% top_n(n = 30, wt = avg_log2FC)
write.csv(da_peaks_filtered, file = "myeloid_da_peaks_filtered.cvs")
#da_peaks_filtered=da_peaks_name
gene_cell_exp <- AverageExpression(myeloid,
                                   features = da_peaks_filtered$query_region,
                                   group.by = 'seurat_clusters',
                                   layer = 'data',
                                   assays = 'peaks') 

gene_cell_exp <- as.data.frame(gene_cell_exp$peaks)

mat =gene_cell_exp

#label gene
top6 = da_peaks_name %>% group_by(cluster) %>% top_n(n = 10, wt = avg_log2FC)
top6$name <- paste(top6$query_region, top6$gene_name, sep = "-")
#write.csv(top6, file="immune_top6_peak.csv")
#plot
pdf('heatmap3_diff_Peak_myeloid.pdf', width=8, height=16)
heata = Heatmap(mat ,
                    data_scale = F,
                    Order_col = colnames(mat),
                    legendTitle = "z-score",
                    point_size = 5,
                    heat_col = c('#4575b4','#abd9e9','white','#f46d43','#d73027'),
                    #heat_col = brewer.pal(n = 5, name = "RdYlBu"),
                    TitlePosition = "leftcenter-rot",
                    legend_at = c(-8,-4,0,4,8),
                    legend_Lab = c(-8,-4,0,4,8),
                    column_names_gp = gpar(fontsize = 6),
                    row_names_gp = gpar(fontsize = 6),
                    customRowLabel=top6$name,
                    colanno_color = c("#CB7E83","#73A1BE","#85C17E","#F5C96B","#7D9BE5","#EB8E7C","#F5C96B","#87C55F","#289E92"))
draw(heata, merge_legends = TRUE,heatmap_legend_side = "right") 
dev.off()


#####################motif analysis ################################################
#####################motif analysis ################################################
##########motif analysis#################################
#######################Motif enrichment####################
library(Signac)
library(Seurat)
library(JASPAR2020)
library(TFBSTools)
library(BSgenome.Hsapiens.UCSC.hg38)
library(patchwork)
library(BiocParallel)
register(MulticoreParam(15))
library(ggplot2)

DefaultAssay(myeloid) <- "chromvar"
###3 Different TF in celltype
differential.activity <- FindAllMarkers(
  object = myeloid,
  #ident.1 = 'Pvalb',
  #ident.2 = 'Sst',
  only.pos = TRUE,
  mean.fxn = rowMeans,
  fc.name = "avg_diff"
)

differential.activity

differential.activity <- merge(differential.activity, list_motif, by.x = "gene", by.y = "ID", all.x = TRUE)

differential.activity

write.csv(differential.activity, "diff_TF_myeloid.csv")

#############
#Part3, calculate TF matrix
#differential.activity_filtered <-differential.activity[differential.activity$p_val_adj < 0.00001 & differential.activity$pct.1>0.56, ]
#differential.activity_filtered <-differential.activity[differential.activity$p_val_adj < 0.001, ]
differential.activity_filtered <-differential.activity[differential.activity$avg_diff > 0.25, ]

#differential.activity_filtered <- differential.activity_filtered %>% group_by(cluster) %>% top_n(n = 30, wt = avg_diff)

gene_cell_exp <- AverageExpression(myeloid,
                                   features = differential.activity_filtered$gene,
                                   #features = differential.activity$gene,
                                   group.by = 'seurat_clusters',
                                   layer = 'data',
                                   assays = 'chromvar') 
mat =gene_cell_exp1

#label gene
#top6 = differential.activity%>% group_by(cluster) %>% top_n(n = 6, wt = avg_diff)
top6 = differential.activity_filtered%>% group_by(cluster) %>% top_n(n = 6, wt = avg_diff)

#plot
pdf('heatmap2_TF activity_myeloid.pdf', width=4, height=6)
heata = Heatmap(mat ,
                    data_scale = F,
                    Order_col = colnames(mat),
                    legendTitle = "z-score",
                    point_size = 5,
                    heat_col = c('#006837','#a6d96a','white','#fdae61','#d73027'),
                    #heat_col = brewer.pal(n = 5, name = "RdYlBu"),
                    TitlePosition = "leftcenter-rot",
                    legend_at = c(-4,-2,0,2,4),
                    legend_Lab = c(-4,-2,0,2,4),
                    column_names_gp = gpar(fontsize = 6),
                    row_names_gp = gpar(fontsize = 6),
                    customRowLabel=top6$name, #annotation
                    colanno_color = c("#66529F","#FF9900","#5084C2","#EB545C","#7D9BE5","#EB8E7C","#F5C96B","#87C55F","#289E92"))
draw(heata, merge_legends = TRUE,heatmap_legend_side = "right") 
dev.off()


############Motif enrich in  each cell type plot:line############
############Motif enrich in  each cell type plot:line############
differential.activity_filtered=differential.activity

differential.activity_filtered$`-log10(p_val_adj)` <- -log10(differential.activity_filtered$p_val_adj)


print(differential.activity_filtered)


df <- data.frame(TF = differential.activity_filtered$name, mlog10Padj = differential.activity_filtered$`-log10(p_val_adj)`, 
                 celltype = differential.activity_filtered$cluster)

df <- df[order(df$mlog10Padj, decreasing = TRUE),]
df$rank <- seq_len(nrow(df))

head(df)

library(RColorBrewer)
library(ggrepel)
library(BuenColors)
library(ggsci)

ggplot(df, aes(rank, mlog10Padj, color = mlog10Padj)) + 
  geom_point(size = 1) + 
  ggrepel::geom_label_repel(
    data = df[rev(seq_len(min(nrow(df), 30))), ], aes(x = rank, y = mlog10Padj, label = TF), 
    size = 1.5,
    nudge_x = 2,
    color = "black"           
  ) + 
  theme_classic() + 
  ylab("-log10(P-adj) Motif Enrichment") +
  xlab("Rank Sorted TFs Enriched") +
  scale_color_gradientn(colors = c("#fff5f0", "#ea8171", "#b13f64"))

saveRDS(myeloid, file="myeloid.rds")
