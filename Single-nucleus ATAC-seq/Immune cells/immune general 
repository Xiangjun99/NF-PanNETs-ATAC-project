library(Signac)
library(Seurat)
library(SeuratWrappers)
library(monocle3)
library(Matrix)
library(ggplot2)
library(patchwork)
library(magrittr)
library(dplyr)
library(tidyr) 
library(Seurat)
library(EnsDb.Hsapiens.v86)
library(BuenColors)
library(msigdbr)

pbmc <- readRDS("/vast/palmer/scratch/liu_yang/dw779/DXJ_ATAC/@@@PNET_Proj_Nov/pbmc_rm_Doublet_celltype_ExTuImFi_1122.rds")

immune <- pbmc[,  pbmc$celltype %in% c("Immune cells")]
immune

immune@meta.data$grade <- grade_info[immune@meta.data$dataset]


#####################immune recluster analysis ################################################
#####################immune recluster analysis ################################################
immune

#Normalization and linear dimensional reduction to remove batch effect
immune <- RunTFIDF(immune)
immune <- FindTopFeatures(immune, min.cutoff = 'q0')
immune <- RunSVD(immune)

#DepthCor(immune)

alphabet <- c('#F5C96B','#5084C2','#EB545C','#FF9900','#87C55F','#EB8E7C','#7D9BE5',
              '#66529F','#DAB2B2','#FC6FCF','#0099FF','#85C17E',
              '#2B6688','#245297','#D87070','#AABBCC','#C24976','#DEBF80',
              '#5F9069','#A37E7D','#B291B5','#8A7197','#3BA997','#7F7F7F',
              '#73AD96','#95BAA6','#B487B7','#F0CE58','#EF7512','#76A2BB',
              '#F52831','#F1A93B','#DCCD58','#289E92','#CB7E83','#469393','#F5D78F'
)

#Non-linear dimension reduction and clustering
immune <- RunUMAP(object = immune, reduction = 'lsi', dims = 2:30)
immune <- FindNeighbors(object = immune, reduction = 'lsi', dims = 2:30)
immune <- FindClusters(object = immune, verbose = FALSE, algorithm = 3,resolution = 0.6)

#subset, Immune cells_normal is endocrine, not immune
immune <- subset(immune, idents = c("T cells", "B cells", "NK cells", "Myeloid Cells"))

immune

p1 <- DimPlot(object = immune, label = TRUE) +  
  scale_color_manual(values = alphabet[1:(immune@active.ident %>% unique %>% length )])
p1
ggsave("UMAP_immune_cluster-241231.pdf", plot = p1, dpi = 600, bg = NULL, height = 8, width = 8)


p2 <- DimPlot(object = immune, label = TRUE, group.by = "dataset") 
p2
ggsave("UMAP_immune_dataset-241231.pdf", plot = p2, dpi = 600, bg = NULL, height = 8, width = 8)

alphabet1 <- c('#87C55F','#B487B7')
p3 <- DimPlot(object = immune, group.by = "grade")+  
  scale_color_manual(values = alphabet1[1:(immune@active.ident %>% unique %>% length )])
p3
ggsave("UMAP_immune_grade-241231.pdf", plot = p3, dpi = 600, bg = NULL, height = 8, width = 8)

p4= p1+p3
p4

#rename celltype 
#rename endocrine1 cluster
new.cluster.ids <- c(
  "0" = "T cells",
  "1" = "Myeloid Cells",
  "2" = "B cells",
  "3" = "DC",
  "4" = "NK cells"
  #"5" = "Immune cells_normal"
)

immune <- RenameIdents(immune, new.cluster.ids)                        
immune$celltype <- immune@active.ident 

p5 <- DimPlot(object = immune, label = TRUE) +  
  scale_color_manual(values = alphabet[1:(immune@active.ident %>% unique %>% length )])
p5

#rename
Idents(immune)
immune <- RenameIdents(immune, c("DC" = "Myeloid Cells"))
immune$celltype <- immune@active.ident 
immune$celltype

ggsave("UMAP_immune_celltype2.pdf", plot = p5, dpi = 600, bg = NULL, height = 8, width = 8)


marker.genes <-  unique(c("CD19", "MS4A1", "CD79A", "CD79B", "CD83", #B
                          "CD8B", "CD8A", #T
                          "SPON2","IL2RB","KLRD1","CD160", #NK
                          #"FLT3", "ZBTB46",  #cDCs
                          #"ENPP3", #mast
                          "CD14", #"FCGR3A", "FCGR1A", #monocytes
                          "ITGAM", "LGALS3", "CD68", "CD163" #macrophage "LYZ", "ADGRE1", , "LAMP2"
))

p6 <- DotPlot(immune, features=marker.genes, cols="RdGy") + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) 
p6
ggsave("immune_markergene_Dotplot3-20241231.pdf", plot = p6, dpi = 600, bg = NULL, height = 6, width = 10)

saveRDS(immune, file="immune_celltype3_20241231.rds")

# Msigdb pathway enrich analysis
DefaultAssay(immune) <- 'RNA'

######1.find DEGs and transfer to standard format
diff <- FindAllMarkers(immune, assay = "RNA", logfc.threshold = 0.1, min.pct = 0.01)  #only.pos = T

#cluster information
group <- data.frame(gene=diff$gene,
                    group=diff$cluster)#分组情况

#gene转化为ID
Gene_ID <- bitr(diff$gene, fromType="SYMBOL", 
                toType="ENTREZID", 
                OrgDb="org.Hs.eg.db")

#构建文件并分析
data  <- merge(Gene_ID,group,by.x='SYMBOL',by.y='gene')

#---------------------step 2 msigdb hallmark pathway-----------------------------

######1.prepare msigdb hallmark pathway set
msig_hallmark <- msigdbr(species = "Homo sapiens", category = "H")
msig_hallmark_list <- msig_hallmark[, c("gs_name", "entrez_gene")]

######2.prepare background gene, gene detected in more than 0.1% of total tumor cells
raw_counts <- data.frame(immune@assays[["RNA"]]@counts)
gene_detection_rate <- rowSums(raw_counts > 0) / ncol(raw_counts)
background_genes <- rownames(raw_counts)[gene_detection_rate > 0.001]
length(background_genes)

#gene name transfer to entrezID
entrezID_background <- bitr(background_genes,
                            fromType = "SYMBOL",
                            toType = "ENTREZID",
                            OrgDb = "org.Hs.eg.db")


######3.pathway enrich analysis
pathway_enrich <- compareCluster(
  ENTREZID~group, 
  data=data, 
  fun="enricher", 
  #OrgDb="org.Hs.eg.db",
  #ont = "ALL",
  universe = entrezID_background$ENTREZID, 
  pAdjustMethod = "BH",
  pvalueCutoff = 0.05,
  qvalueCutoff = 0.05,
  TERM2GENE = msig_hallmark_list, 
  TERM2NAME = NA
)

#save plot
ggsave("Msigdb_pathway_immune-20241231.pdf", plot = p7, width = 8, height =8) #change name
#save results
msigdb_pathway_enrich <- pathway_enrich@compareClusterResult

write.csv(msigdb_pathway_enrich, file = "Msigdb_pathway_immune-20241231.csv")


#---------------------step 4 KEGG pathway-----------------------------

##############KEGG enrich analysis
KEGG_enrich <- compareCluster(
  ENTREZID~group, 
  data=data, 
  fun="enrichKEGG", 
  organism= "hsa",
  #ont = "BP",
  pAdjustMethod = "BH",
  pvalueCutoff = 0.01,
  qvalueCutoff = 0.01
)

#plot
p8 <- dotplot(KEGG_enrich, showCategory=5,font.size = 8)+
  theme(
    panel.grid.major = element_blank(),  
    panel.grid.minor = element_blank(),  
    panel.background = element_blank()   
  )
p8

ggsave("Immune_KEGG_enrich-20241231.pdf", plot = p8, width = 8, height = 8) #change name

KEGG_enrich = setReadable(KEGG_enrich,OrgDb = "org.Hs.eg.db", keyType = "ENTREZID")
write.csv(KEGG_enrich, file = "Immune_KEGG_enrich_genename-20241231.csv", row.names = FALSE)  #change name

df_KEGG <- read.csv("Immune_KEGG_enrich_genename-20241231-1.csv", header = T)

library(forcats)

df_KEGG$Description <- as.factor(df_KEGG$Description)
df_KEGG$Description <- fct_inorder(df_KEGG$Description)

p8 <- ggplot(df_KEGG, aes(x=as.factor(Cluster), y=Description)) +
  geom_point(aes(fill=p.adjust, size=Count), shape=21)+
  theme_bw()+
  theme(axis.text.x=element_text(angle=60,hjust = 1,vjust=1),
        axis.text = element_text(color = 'black', size = 10),
        panel.grid.major = element_blank(),  
        panel.grid.minor = element_blank(),  
        panel.background = element_blank())+
  scale_fill_gradient(low="yellow",high="purple")+
  #scale_color_gradientn(colors = jdb_palette("brewer_orange"))+
  labs(x=NULL,y=NULL)

p8
ggsave("Msigdb_Cluster_compare_all_1209.pdf", plot = p2, width = 8, height = 6) #change name






#####################Peak analysis ################################################
#####################Peak analysis ################################################
library(Seurat)
library(EnhancedVolcano)
library(ggplot2)
library(ggrepel)
library(dplyr)

DefaultAssay(immune) <- 'peaks'


da_peaks <- FindAllMarkers(immune, assay = "peaks", logfc.threshold = 0.5, min.pct = 0.01)  #only.pos = T
da_peaks$closest_gene <- ClosestFeature(immune, regions = rownames(da_peaks))$gene_name

#find closest genes near da_peaks
open_da_peaks <- rownames(da_peaks)
open_da_peaks
closest_genes_da_peaks <- ClosestFeature(immune, regions=open_da_peaks)
head(closest_genes_da_peaks)


closest_genes_da_peaks1 <- DACRs_marker

#merge da_peaks and closest_gene
da_peaks_name <- merge(closest_genes_da_peaks1, da_peaks, by.x = "query_region", by.y = "gene", all.x = TRUE)


da_peaks_filtered=da_peaks_name
gene_cell_exp <- AverageExpression(immune,
                                   features = da_peaks_filtered$query_region,
                                   group.by = 'celltype',
                                   layer = 'data',
                                   assays = 'peaks') 

gene_cell_exp <- as.data.frame(gene_cell_exp$peaks)


mat =gene_cell_exp

#label gene
top6 = da_peaks_name %>% group_by(cluster) %>% top_n(n = 10, wt = avg_log2FC)
top6$name <- paste(top6$query_region, top6$gene_name, sep = "-")
#write.csv(top6, file="immune_top6_peak.csv")
#plot
pdf('heatmap_diff_789Peak_immune-20241231.pdf', width=8, height=16)
heata = Heatmap(mat ,
                    data_scale = F,
                    Order_col = colnames(mat),
                    legendTitle = "z-score",
                    point_size = 5,
                    heat_col = c('#4575b4','#abd9e9','white','#f46d43','#d73027'),
                    #heat_col = brewer.pal(n = 5, name = "RdYlBu"),
                    TitlePosition = "leftcenter-rot",
                    legend_at = c(-8,-4,0,4,8),
                    legend_Lab = c(-8,-4,0,4,8),
                    column_names_gp = gpar(fontsize = 6),
                    row_names_gp = gpar(fontsize = 6),
                    customRowLabel=top6$name,
                    colanno_color = c("#CB7E83","#73A1BE","#85C17E","#F5C96B","#7D9BE5","#EB8E7C","#F5C96B","#87C55F","#289E92"))
#rowAnn = T,
#rowAnno_num = c(10,10,10,10,10,10,10))

draw(heata, merge_legends = TRUE,heatmap_legend_side = "right") 
dev.off()

# paired test
DACRs <- FindMarkers(
  object = immune,
  ident.1 = "Immune cells_normal",
  ident.2 = "Myeloid Cells",
  test.use = 'wilcox',
  min.pct = 0.1
)
DACRs$gene_name <- ClosestFeature(immune, regions = rownames(DACRs))$gene_name
#da_peaks_filtered <-da_peaks_name[da_peaks_name$p_val_adj < 0.05, ]

p9<-EnhancedVolcano(DACRs,
                    #lab = rownames(diff_C0),
                    lab = DACRs$closest_gene,
                    x = 'avg_log2FC',
                    y = 'p_val_adj',
                    pCutoff = 0.05,
                    FCcutoff = 0.5,
                    pointSize = 2.0,
                    labSize = 6.0,
                    title = 'Immune cells_normal vs Myeloid Cells')+
  theme(panel.grid.major = element_blank(), # 去掉主要网格线
        panel.grid.minor = element_blank())  # 去掉次要网格线
p9
ggsave("Peak_volcano2.pdf", plot = p9, dpi = 600, bg = NULL, height = 8, width = 8)

#####################motif analysis ################################################
#####################motif analysis ################################################
##########motif analysis#################################
#######################Motif enrichment####################
library(Signac)
library(Seurat)
library(JASPAR2020)
library(TFBSTools)
library(BSgenome.Hsapiens.UCSC.hg38)
library(patchwork)
library(BiocParallel)
register(MulticoreParam(15))

library(ggplot2)

#pbmc <- readRDS("pbmc_rm_Doublet_celltype_ExTuImFi_1122.rds")


############################################################################
###Part1
#motif ID 与motifnames一一对应的列表
list_motif <- data.frame(immune@assays[["peaks"]]@motifs@motif.names)
list_motif <- t(list_motif)
list_motif <- data.frame(list_motif)

#修改列名
colnames(list_motif)[colnames(list_motif) == "list_motif"] <- "name"
#新加一列，与行名相同
list_motif$ID <- rownames(list_motif)

########################################################################################################################
#Part2
DefaultAssay(immune) <- "chromvar"
###3 Different TF in celltype
differential.activity <- FindAllMarkers(
  object = immune,
  #ident.1 = 'Pvalb',
  #ident.2 = 'Sst',
  only.pos = TRUE,
  mean.fxn = rowMeans,
  fc.name = "avg_diff"
)

differential.activity

differential.activity <- merge(differential.activity, list_motif, by.x = "gene", by.y = "ID", all.x = TRUE)

differential.activity

write.csv(differential.activity-, "diff_TF_immune-20241231.csv")

#############
#Part3, calculate TF matrix
#differential.activity_filtered <-differential.activity[differential.activity$p_val_adj < 0.00001 & differential.activity$pct.1>0.56, ]
differential.activity_filtered <-differential.activity[differential.activity$p_val_adj < 0.001, ]

#differential.activity_filtered <- differential.activity_filtered %>% group_by(cluster) %>% top_n(n = 30, wt = avg_diff)

gene_cell_exp <- AverageExpression(immune,
                                   features = differential.activity_filtered$gene,
                                   #features = differential.activity$gene,
                                   group.by = 'celltype',
                                   layer = 'data',
                                   assays = 'chromvar') 
gene_cell_exp <- as.data.frame(gene_cell_exp$chromvar)

gene_cell_exp$gene = rownames(gene_cell_exp)

gene_cell_exp1 <- merge(gene_cell_exp, list_motif, by.x = "gene", by.y = "ID", all.x = TRUE)
rownames(gene_cell_exp1) = gene_cell_exp1$name

gene_cell_exp1$gene <- NULL
gene_cell_exp1$name <- NULL

mat =gene_cell_exp1

#label gene
top6 = differential.activity_filtered %>% group_by(cluster) %>% top_n(n = 6, wt = avg_diff)
top6 = differential.activity %>% group_by(cluster) %>% top_n(n = 6, wt = avg_diff)

#plot
pdf('heatmap_TF activity76_immune-20241231.pdf', width=4, height=6)
heata = Heatmap(mat ,
                    data_scale = F,
                    Order_col = colnames(mat),
                    legendTitle = "z-score",
                    point_size = 5,
                    heat_col = c('#006837','#a6d96a','white','#fdae61','#d73027'),
                    #heat_col = brewer.pal(n = 5, name = "RdYlBu"),
                    TitlePosition = "leftcenter-rot",
                    legend_at = c(-4,-2,0,2,4),
                    legend_Lab = c(-4,-2,0,2,4),
                    column_names_gp = gpar(fontsize = 6),
                    row_names_gp = gpar(fontsize = 6),
                    customRowLabel=top6$name, #annotation
                    colanno_color = c("#66529F","#FF9900","#5084C2","#EB545C","#7D9BE5","#EB8E7C","#F5C96B","#87C55F","#289E92"))
#rowAnn = T,
#rowAnno_num = c(10,10,10,10,10,10,10))

draw(heata, merge_legends = TRUE,heatmap_legend_side = "right") 
dev.off()


############Motif enrich in  each cell type plot:line############
############Motif enrich in  each cell type plot:line############
differential.activity_filtered=differential.activity

differential.activity_filtered$`-log10(p_val_adj)` <- -log10(differential.activity_filtered$p_val_adj)

print(differential.activity_filtered)

df <- data.frame(TF = differential.activity_filtered$name, mlog10Padj = differential.activity_filtered$`-log10(p_val_adj)`, 
                 celltype = differential.activity_filtered$cluster)

df <- df[order(df$mlog10Padj, decreasing = TRUE),]
df$rank <- seq_len(nrow(df))

head(df)

library(RColorBrewer)
library(ggrepel)
library(BuenColors)
library(ggsci)

ggplot(df, aes(rank, mlog10Padj, color = mlog10Padj)) + 
  geom_point(size = 1) + 
  ggrepel::geom_label_repel(
    data = df[rev(seq_len(min(nrow(df), 30))), ], aes(x = rank, y = mlog10Padj, label = TF), 
    size = 1.5,
    nudge_x = 2,
    color = "black"          
  ) + 
  theme_classic() + 
  ylab("-log10(P-adj) Motif Enrichment") +
  xlab("Rank Sorted TFs Enriched") +
  scale_color_gradientn(colors = c("#fff5f0", "#ea8171", "#b13f64"))
