setwd("/vast/palmer/scratch/liu_yang/dw779/DXJ_ATAC/@@@PNET_Proj_Nov/Tumor/2nd_celltype_1210_All_Tumor/Tumor_trajectory")

library(Signac)
library(Seurat)
library(SeuratWrappers)
library(monocle3)
library(Matrix)
library(ggplot2)
library(patchwork)
library(magrittr)
library(dplyr)
library(tidyr) 
library(Seurat)
library(EnsDb.Hsapiens.v86)
library(BuenColors)
library(clusterProfiler)
library(msigdbr)
library(dplyr)
library(enrichplot)
library(DOSE)
library(org.Hs.eg.db)
library(forcats)
library(dittoSeq)
library(aPEAR)
library(msigdbr)


# --------------------- monocle3 visualization 1: build trajectory -----------------------------
# Default assay set to peaks (ATAC data)
DefaultAssay(endocrine1) <- 'peaks' 

# --------------------- monocle3 visualization 1: gene modules -----------------------------
# Load precomputed cell_data_set object
mycds2 <- readRDS("endocrine1.cds_Peaktrajectory_20250122.rds")

# Step 2: dimensionality reduction and clustering
mycds2 <- preprocess_cds(mycds2, num_dim = 100) # PCA by default

# Identify genes/peaks with significant variation along trajectory
mycds2_res <- graph_test(mycds2, neighbor_graph = "principal_graph", cores = 15)
write.csv(mycds2_res, file = "Tumor_Peak_mycds2_res_trajectory_20250122.csv")

res_ids <- row.names(subset(mycds2_res, q_value < 0.01))

# Cluster significant genes into co-expression modules
gene_module_df <- find_gene_modules(
  mycds2[res_ids,], 
  resolution = c(10^seq(-6,-1))
)
write.csv(gene_module_df, file = "Tumor_Peak_mycds2_module_20250122.csv")

# Cell group info
cell_group_df <- tibble::tibble(
  cell = row.names(colData(mycds2)), 
  cell_group = colData(mycds2)$celltype
)

# Aggregate expression per module per cell group
agg_mat <- aggregate_gene_expression(mycds2, gene_module_df, cell_group_df)
row.names(agg_mat) <- stringr::str_c("Module", row.names(agg_mat))

# Plot heatmap of aggregated module expression
p2 <- pheatmap::pheatmap(
  agg_mat,
  scale = "column", 
  clustering_method = "ward.D2"
)
ggsave(filename = "Tumor_peak_module_trajectory_20250122.pdf", plot = p2, height = 8, width = 8)


# --------------------- monocle3 visualization 2: Heatmap -----------------------------
# Select significant genes
genes <- row.names(subset(mycds2_res, q_value < 0.001 & morans_I > 0.035))

# Or keep all peaks (uncomment if needed)
# genes <- row.names(subset(mycds2_res))

# Extract expression matrix and order by pseudotime
plot_matrix <- exprs(mycds2)[
  match(genes, rownames(rowData(mycds2))),
  order(pseudotime(mycds2))
]

# Smooth and z-score transform
plot_matrix <- t(apply(plot_matrix, 1, function(x) { smooth.spline(x, df = 3)$y }))
plot_matrix <- t(apply(plot_matrix, 1, function(x) { (x - mean(x)) / sd(x) }))

plot_matrix_combin <- cutColumn_Means(plot_matrix, cut = 50)

# Heatmap plotting
p3 <- pheatmap::pheatmap(
  plot_matrix_combin, 
  useRaster = TRUE,
  cluster_cols = FALSE, 
  cluster_rows = TRUE, 
  show_rownames = FALSE, 
  show_colnames = FALSE, 
  clustering_method = "ward.D2",
  cutree_rows = 4,
  filename = NA,
  border_color = NA,
  fontsize_row = 8,
  color = colorRampPalette(c('#1A5592', 'white', "#B83D3D"))(100),
  clustering_callback = callback
)

ggsave(filename = "Tumor_peak_trajectory_heatmap_V1_20250211.pdf", plot = p3, height = 8, width = 6)



