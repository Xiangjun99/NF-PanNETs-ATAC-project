library(Signac)
library(Seurat)
library(SeuratWrappers)
library(monocle3)
library(Matrix)
library(ggplot2)
library(patchwork)
library(magrittr)
library(dplyr)
library(tidyr) 
library(Seurat)
library(EnsDb.Hsapiens.v86)
library(BuenColors)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(stringr)
library(Seurat)
library(clusterProfiler)
library(msigdbr)


pbmc <- readRDS("/vast/palmer/scratch/liu_yang/dw779/DXJ_ATAC/@@@PNET_Proj_Nov/pbmc_rm_Doublet_celltype_ExTuImFi_1122.rds")

fibro <- pbmc[,  pbmc$celltype %in% c("Fibroblast")]
fibro


fibro@meta.data$grade <- grade_info[fibro@meta.data$dataset]

fibro <- readRDS("fibro.rds")

#####################immune recluster analysis ################################################
#####################immune recluster analysis ################################################

DefaultAssay(fibro) <- 'peaks'
#Normalization and linear dimensional reduction to remove batch effect
fibro <- RunTFIDF(fibro)
fibro <- FindTopFeatures(fibro, min.cutoff = 'q0')
fibro <- RunSVD(fibro)

#DepthCor(immune)

alphabet <- c('#F5C96B','#5084C2','#EB545C','#FF9900','#87C55F','#EB8E7C','#7D9BE5',
              '#66529F','#DAB2B2','#FC6FCF','#0099FF','#85C17E',
              '#2B6688','#245297','#D87070','#AABBCC','#C24976','#DEBF80',
              '#5F9069','#A37E7D','#B291B5','#8A7197','#3BA997','#7F7F7F',
              '#73AD96','#95BAA6','#B487B7','#F0CE58','#EF7512','#76A2BB',
              '#F52831','#F1A93B','#DCCD58','#289E92','#CB7E83','#469393','#F5D78F'
)

#Non-linear dimension reduction and clustering
fibro <- RunUMAP(object = fibro, reduction = 'lsi', dims = 2:10)
fibro <- FindNeighbors(object = fibro, reduction = 'lsi', dims = 2:10)
fibro <- FindClusters(object = fibro, verbose = FALSE, algorithm = 1,resolution = 0.5)

p1 <- DimPlot(object = fibro, label = TRUE) +  
  scale_color_manual(values = alphabet[1:(fibro@active.ident %>% unique %>% length )])
p1
ggsave("UMAP_fibroblast_cluster.pdf", plot = p1, dpi = 600, bg = NULL, height = 8, width = 8)


p2 <- DimPlot(object = fibro, label = TRUE, group.by = "dataset") 
p2
ggsave("UMAP_fibroblast_dataset.pdf", plot = p2, dpi = 600, bg = NULL, height = 8, width = 8)

alphabet1 <- c('#87C55F','#B487B7','#EF7512','#76A2BB')
p3 <- DimPlot(object = fibro, group.by = "grade")+  
  scale_color_manual(values = alphabet1[1:(fibro@active.ident %>% unique %>% length )])
p3
ggsave("UMAP_fibroblast_grade.pdf", plot = p3, dpi = 600, bg = NULL, height = 8, width = 8)

p4= p1+p3
p4

#rename celltype 
#rename endocrine1 cluster
new.cluster.ids <- c(
  "0" = "T cells",
  "1" = "Myeloid Cells",
  "2" = "B cells",
  "3" = "DC",
  "4" = "NK cells",
  "5" = "Immune cells_normal"
)

fibro <- RenameIdents(fibro, new.cluster.ids)                        
fibro$celltype <- fibro@active.ident 

p5 <- DimPlot(object = fibro, label = TRUE) +  
  scale_color_manual(values = alphabet[1:(fibro@active.ident %>% unique %>% length )])
p5

#rename
Idents(fibro)
immune <- RenameIdents(fibro, c("DC" = "Myeloid Cells"))
immune$celltype <- fibro@active.ident 
immune$celltype

ggsave("UMAP_immune_celltype2.pdf", plot = p5, dpi = 600, bg = NULL, height = 8, width = 8)

marker.genes <- unique(c(
  #  "ARX","IRX2","KRT8","MEN1",#tumor
  #  "GCK", "CHGA", "CHGB", "SYP", "CACNA2D2",
  #  "CPLX2", "IQSEC3", "KCNH2", "PSD", "SPTBN4", "SYNGR4", "SYT7", "ITPK1", #islet
  #  "CPB1", "CFTR", "TSPAN8","KRT8","IRX2", # exocrine
  #  "FN1", "COL6A1", "COL6A2", "CD9","EMP1", # fibroblast
  #  "CD83", "CD86", # B cells
  #  "CD8A",  # CD8 T cells
  #  "CD4", # CD4 T cells
  #  "IL2RB", # NK cells
  #  "FLT3", "IRF8", # cDCs
  #  "CD68", "CD163"# macrophages
))

marker.genes <-  unique(c(
  #"ACTA2", "FAP", "PDGFRA", #genral CAF "PDPN", 
  "FN1","CDH2","CDH1",
  "IL6","CXCL12", #Inflammatory CAF (iCAF) markers "CXCL2","CXCL1","CCL2", 
  "FAP","ACTA2",  #Myofibroblastic CAF (myCAF) markers
  "CD74", "CD200","HLA-DPB1"  # Antigen-presenting CAF (apCAF) markers "HLA-DRA","HLA-DRB1",
))


DefaultAssay(fibro) <- 'RNA'

p6 <- DotPlot(fibro, features=marker.genes, cols="RdGy") + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) 
p6
ggsave("fibroblast_markergene_Dotplot_20250108.pdf", plot = p6, dpi = 600, bg = NULL, height = 3, width = 7)

saveRDS(fibro, file="fibro.rds")

DefaultAssay(fibro) <- 'RNA'

######1.find DEGs and transfer to standard format
diff <- FindAllMarkers(fibro, assay = "RNA", logfc.threshold = 0.25, min.pct = 0.1)  #only.pos = T

#cluster information
group <- data.frame(gene=diff$gene,
                    group=diff$cluster)


Gene_ID <- bitr(diff$gene, fromType="SYMBOL", 
                toType="ENTREZID", 
                OrgDb="org.Hs.eg.db")

data  <- merge(Gene_ID,group,by.x='SYMBOL',by.y='gene')

##############KEGG enrich analysis
KEGG_enrich <- compareCluster(
  ENTREZID~group, 
  data=data, 
  fun="enrichKEGG", 
  organism= "hsa",
  #ont = "BP",
  pAdjustMethod = "BH",
  pvalueCutoff = 0.05,
  qvalueCutoff = 0.05
)

#plot
p8 <- dotplot(KEGG_enrich, showCategory=5,font.size = 8)+
  theme(
    panel.grid.major = element_blank(),  
    panel.grid.minor = element_blank(),  
    panel.background = element_blank()   
  )
p8

ggsave("fibro_KEGG_enrich.pdf", plot = p8, width = 6, height = 4) #change name
write.csv(KEGG_enrich, file = "fibro_KEGG_enrich.csv", row.names = FALSE)  #change name

#####################Peak analysis ################################################
#####################Peak analysis ################################################
library(Seurat)
library(EnhancedVolcano)
library(ggplot2)
library(ggrepel)
library(dplyr)

DefaultAssay(fibro) <- 'peaks'


da_peaks <- FindAllMarkers(fibro, assay = "peaks", logfc.threshold = 0.5, min.pct = 0.01)  #only.pos = T
da_peaks$closest_gene <- ClosestFeature(fibro, regions = rownames(da_peaks))$gene_name

#find closest genes near da_peaks
open_da_peaks
closest_genes_da_peaks <- ClosestFeature(fibro, regions=open_da_peaks)
head(closest_genes_da_peaks)

#merge da_peaks and closest_gene
da_peaks_name <- merge(closest_genes_da_peaks1, da_peaks, by.x = "query_region", by.y = "gene", all.x = TRUE)

da_peaks_filtered <-da_peaks_name[da_peaks_name$p_val < 0.001, ]
write.csv(da_peaks_filtered, file="fibro_da_peaks_filtered.csv")

gene_cell_exp <- AverageExpression(fibro,
                                   features = da_peaks_filtered$query_region,
                                   group.by = 'seurat_clusters',
                                   layer = 'data',
                                   assays = 'peaks') 

gene_cell_exp <- as.data.frame(gene_cell_exp$peaks)

mat =gene_cell_exp

#label gene
top6 = da_peaks_name %>% group_by(cluster) %>% top_n(n = 10, wt = avg_log2FC)
top6$name <- paste(top6$query_region, top6$gene_name, sep = "-")
#write.csv(top6, file="immune_top6_peak.csv")

#plot
pdf('heatmap_diff_Peak_fibro.pdf', width=8, height=16)
heata = Heatmap(mat ,
                    data_scale = F,
                    Order_col = colnames(mat),
                    legendTitle = "z-score",
                    point_size = 5,
                    heat_col = c('#4575b4','#abd9e9','white','#f46d43','#d73027'),
                    TitlePosition = "leftcenter-rot",
                    legend_at = c(-8,-4,0,4,8),
                    legend_Lab = c(-8,-4,0,4,8),
                    column_names_gp = gpar(fontsize = 6),
                    row_names_gp = gpar(fontsize = 6),
                    customRowLabel=top6$name,
                    colanno_color = c("#CB7E83","#73A1BE","#85C17E","#F5C96B","#7D9BE5","#EB8E7C","#F5C96B","#87C55F","#289E92"))
draw(heata, merge_legends = TRUE,heatmap_legend_side = "right") 
dev.off()

# paired test
DACRs <- FindMarkers(
  object = fibro,
  ident.1 = "Immune cells_normal",
  ident.2 = "Myeloid Cells",
  test.use = 'wilcox',
  min.pct = 0.1
)
DACRs$gene_name <- ClosestFeature(fibro, regions = rownames(DACRs))$gene_name
#da_peaks_filtered <-da_peaks_name[da_peaks_name$p_val_adj < 0.05, ]


p9<-EnhancedVolcano(DACRs,
                    #lab = rownames(diff_C0),
                    lab = DACRs$closest_gene,
                    x = 'avg_log2FC',
                    y = 'p_val_adj',
                    pCutoff = 0.05,
                    FCcutoff = 0.5,
                    pointSize = 2.0,
                    labSize = 6.0,
                    title = 'fibro cells_normal vs Myeloid Cells')+
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()) 
p9
ggsave("Peak_volcano2.pdf", plot = p9, dpi = 600, bg = NULL, height = 8, width = 8)

#####################motif analysis ################################################
#####################motif analysis ################################################
##########motif analysis#################################
#######################Motif enrichment####################
library(Signac)
library(Seurat)
library(JASPAR2020)
library(TFBSTools)
library(BSgenome.Hsapiens.UCSC.hg38)
library(patchwork)
library(BiocParallel)
register(MulticoreParam(15))

library(ggplot2)

########################################################################################################################
#Part2
DefaultAssay(fibro) <- "chromvar"
###3 Different TF in celltype
differential.activity <- FindAllMarkers(
  object = fibro,
  #ident.1 = 'Pvalb',
  #ident.2 = 'Sst',
  only.pos = TRUE,
  mean.fxn = rowMeans,
  fc.name = "avg_diff"
)

differential.activity

differential.activity <- merge(differential.activity, list_motif, by.x = "gene", by.y = "ID", all.x = TRUE)

differential.activity

write.csv(differential.activity, "diff_TF_fibro.csv")

#############
#Part3, calculate TF matrix
#differential.activity_filtered <-differential.activity[differential.activity$p_val_adj < 0.00001 & differential.activity$pct.1>0.56, ]
differential.activity_filtered <-differential.activity[differential.activity$p_val < 0.001, ]

#differential.activity_filtered <- differential.activity_filtered %>% group_by(cluster) %>% top_n(n = 30, wt = avg_diff)

gene_cell_exp <- AverageExpression(fibro,
                                   #features = differential.activity_filtered$gene,
                                   features = differential.activity$gene,
                                   group.by = 'seurat_clusters',
                                   layer = 'data',
                                   assays = 'chromvar') 
gene_cell_exp <- as.data.frame(gene_cell_exp$chromvar)


mat =gene_cell_exp1

#label gene
top6 = differential.activity_filtered %>% group_by(cluster) %>% top_n(n = 6, wt = avg_diff)

#plot
pdf('heatmap1_TF activity_fibro.pdf', width=4, height=6)
heata = Heatmap(mat ,
                    data_scale = F,
                    Order_col = colnames(mat),
                    legendTitle = "z-score",
                    point_size = 5,
                    heat_col = c('#006837','#a6d96a','white','#fdae61','#d73027'),
                    #heat_col = brewer.pal(n = 5, name = "RdYlBu"),
                    TitlePosition = "leftcenter-rot",
                    legend_at = c(-4,-2,0,2,4),
                    legend_Lab = c(-4,-2,0,2,4),
                    column_names_gp = gpar(fontsize = 6),
                    row_names_gp = gpar(fontsize = 6),
                    customRowLabel=top6$name, #annotation
                    colanno_color = c("#66529F","#FF9900","#5084C2","#EB545C","#7D9BE5","#EB8E7C","#F5C96B","#87C55F","#289E92"))
draw(heata, merge_legends = TRUE,heatmap_legend_side = "right") 
dev.off()


############Motif enrich in  each cell type plot:line############
############Motif enrich in  each cell type plot:line############
differential.activity_filtered=differential.activity

differential.activity_filtered$`-log10(p_val_adj)` <- -log10(differential.activity_filtered$p_val_adj)


print(differential.activity_filtered)

df <- data.frame(TF = differential.activity_filtered$name, mlog10Padj = differential.activity_filtered$`-log10(p_val_adj)`, 
                 celltype = differential.activity_filtered$cluster)

df <- df[order(df$mlog10Padj, decreasing = TRUE),]
df$rank <- seq_len(nrow(df))

head(df)

library(RColorBrewer)
library(ggrepel)
library(BuenColors)
library(ggsci)

ggplot(df, aes(rank, mlog10Padj, color = mlog10Padj)) + 
  geom_point(size = 1) +  
  ggrepel::geom_label_repel(
    data = df[rev(seq_len(min(nrow(df), 30))), ], aes(x = rank, y = mlog10Padj, label = TF), 
    size = 1.5,
    nudge_x = 2,
    color = "black"          
  ) + 
  theme_classic() + 
  ylab("-log10(P-adj) Motif Enrichment") +
  xlab("Rank Sorted TFs Enriched") +
  scale_color_gradientn(colors = c("#fff5f0", "#ea8171", "#b13f64"))

saveRDS(fibro, file="fibro.rds")

######coverage plot

CoveragePlot(
  object = fibro,
  region = "TPM2",
  #region.highlight = regions_highlight,
  extend.upstream = 1000,
  extend.downstream = 1000
)

genes_of_interest <-  unique(c(
  #"ACTA2", "FAP", "PDGFRA", #genral CAF "PDPN", 
  "FN1","CDH2","CDH1",
  "IL6","CXCL12", #Inflammatory CAF (iCAF) markers "CXCL2","CXCL1","CCL2", 
  "FAP","ACTA2",  #Myofibroblastic CAF (myCAF) markers
  "CD74", "HLA-DPB1"  # Antigen-presenting CAF (apCAF) markers "HLA-DRA","HLA-DRB1",
))

extend_upstream <- 1000
extend_downstream <- 1000

output_dir <- "genome_track"
if (!dir.exists(output_dir)) {
  dir.create(output_dir)
}


for (gene in genes_of_interest) {
  
  p <- CoveragePlot(
    object = fibro,
    region = gene,
    extend.upstream = extend_upstream,
    extend.downstream = extend_downstream
  ) & scale_fill_manual(values = alphabet)
  
  pdf_filename <- file.path(output_dir, paste0("GenomicRegions_", gene, ".pdf"))
  ggsave(pdf_filename, plot = p, dpi = 600, height = 6, width = 8, bg = "white")  
}
